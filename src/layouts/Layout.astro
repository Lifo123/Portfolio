---
import "@Assets/css/Global.css";
import "@lifo123/library/dist/css/library.css";
import Header from "@Components/Header.astro";
import Footer from "@Components/Footer.astro";
import ViewTransitions from "astro/components/ViewTransitions.astro";

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
const site = new URL(Astro.site);
const path = Astro.url.pathname;
const url = new URL(path, site).href;
---

<script is:inline>
	const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
	function setDarkMode(document) {
		const isDark = window.matchMedia(
			"(prefers-color-scheme: dark)",
		).matches;
		const theme =
			localStorage.getItem("F-Theme") || (isDark ? "dark" : "light");

		if (theme === "system") {
			document.documentElement.classList[isDark ? "add" : "remove"](
				"dark",
			);
			document.documentElement.style.colorScheme = isDark
				? "dark"
				: "light";
			return;
		}

		document.documentElement.classList[theme === "dark" ? "add" : "remove"](
			"dark",
		);
		document.documentElement.style.colorScheme =
			theme === "dark" ? "dark" : "light";
	}

	setDarkMode(document);

	document.addEventListener("astro:before-swap", (event) =>
		setDarkMode(event.newDocument),
	);
	mediaQuery.addEventListener("change", () => setDarkMode(document));
</script>

<html lang="en">
	<head>
		<title>{title}</title>
		<meta name="Author" content="Lifo123" />
		<meta name="description" content={description} />

		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<!--                                                                                                                                                   
            |***********************************************************************************|
            |                                                                                   |
            |  ██       ██   ███████    ████████         ████████     ████████    ███      ███  |
            |  ██       ██   ██        ██      ██       ██      ██   ██      ██   ████    ████  |
            |  ██       ██   ███████   ██      ██       ██           ██      ██   ██ ██  ██ ██  |
            |  ██       ██   ██        ██      ██       ██      ██   ██      ██   ██  ████  ██  |
            |  ███████  ██   ██         ████████   ██    ████████     ████████    ██        ██  |
            |                                                                                   |
            |***********************************************************************************|
        -->

		<!-- OpenGraph Tags -->
		<meta property="og:title" content={title} />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={url} />
		<meta property="og:locale" content="en" />
		<meta property="og:description" content={description} />
		<meta property="og:site_name" content="Template" />
		<meta property="og:image" content="" />
		<meta property="og:image:alt" content="Template Image" />

		<!-- Twitter Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content="@Template" />
		<meta name="twitter:creator" content="@Lifo123" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:url" content={url} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content="" />
		<meta name="twitter:image:alt" content="Template Image" />
		<!-- Styles -->
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/gh/Lifo123/FlifoCSS@main/src/output/Flifo.css" 
		/>
		<ViewTransitions />
	</head>
	<body class="f-col mx-auto f-align-center">
		<button aria-label="Back to Top" class="f-top-btn d-flex f-center fixed br-50 pointer" id="top-btn" onclick="window.scrollTo(0,'smooth');">
			<svg height="16" fill="none" focusable="false" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"> <path d="M4.5 15.75l7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round"></path> </svg>
		</button>
		<Header />
		<slot />
		<Footer />
	</body>
</html>

<script>
	window.addEventListener("scroll", () => {
    const topBtn = document.getElementById("top-btn");

    if (window.scrollY > 400) {
        topBtn.classList.add("visible");
    } else {
        topBtn.classList.remove("visible");
    }
});
</script>

<style is:inline>
	html{
		view-transition-name: none;
		scroll-behavior: smooth;
	}
	body {
		width: 100% !important;
		max-width: 60%;
	}
	.f-top-btn{
		border: none;
		outline: none;
		background-color: var(--f-p-bg-2);
		height: 48px;
		aspect-ratio: 1 / 1;
		bottom: -10px;
		right: 32px;
		opacity: 0;
		z-index: 800;
		pointer-events: none;
		transition: opacity .3s ease, bottom .3s ease;
	}
	.f-top-btn.visible{
		opacity: 1;
		bottom: 34px;
		pointer-events: visible;
	}

	@media(1130px > width){
		body{
			max-width: 100%;
		}
	}
</style>

